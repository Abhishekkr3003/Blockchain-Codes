{
	"id": "f74377aba0c6a1c8855f17d7cd040adb",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.5.17",
	"solcLongVersion": "0.5.17+commit.d19bba13",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/15.sol": {
				"content": "pragma solidity ^0.5.1;\r\n\r\ncontract MyContr {\r\n\r\n    //Allows you to fund the contract with ether at the moment of deployement\r\n\r\n    //You need to set the value of the transaction\r\n\r\n    constructor() public payable {}\r\n\r\n    function\r\n    foo() public view returns(address)\r\n\r\n    {\r\n\r\n        // address x= address(this);\r\n\r\n        // return x.balance;\r\n\r\n        // return address(this);\r\n\r\n        //\r\n        // return msg.sender;\r\n\r\n        return address(this);\r\n\r\n    }\r\n\r\n    // function\r\n    // soo() public view returns(uint)\r\n\r\n    // {\r\n\r\n    ///\r\n    // uint x = msg.value;\r\n\r\n    //\r\n    // return x;\r\n\r\n    //}\r\n\r\n    function transfer(address payable receiver, uint amount) public payable returns(address) {\r\n\r\n        require(address(this).balance >= amount);\r\n\r\n        require(msg.value > 20);\r\n\r\n        receiver.transfer(amount);\r\n\r\n        return address(this);\r\n\r\n    }\r\n\r\n    //Payable function that allows you to directly send ether to the contract\r\n\r\n    //without calling a specific function\r\n\r\n    //    function () external payable {}\r\n\r\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"contracts/15.sol": {
				"MyContr": {
					"abi": [
						{
							"inputs": [],
							"payable": true,
							"stateMutability": "payable",
							"type": "constructor"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "foo",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address payable",
									"name": "receiver",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"payable": true,
							"stateMutability": "payable",
							"type": "function"
						}
					],
					"devdoc": {
						"methods": {}
					},
					"evm": {
						"assembly": "    /* \"contracts/15.sol\":27:1071  contract MyContr {\r... */\n  mstore(0x40, 0x80)\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/15.sol\":27:1071  contract MyContr {\r... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0xa9059cbb\n      eq\n      tag_2\n      jumpi\n      dup1\n      0xc2985578\n      eq\n      tag_3\n      jumpi\n    tag_1:\n      0x00\n      dup1\n      revert\n        /* \"contracts/15.sol\":636:895  function transfer(address payable receiver, uint amount) public payable returns(address) {\r... */\n    tag_2:\n      tag_4\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x40\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_5\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_5:\n        /* \"contracts/15.sol\":636:895  function transfer(address payable receiver, uint amount) public payable returns(address) {\r... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_6\n      jump\t// in\n    tag_4:\n      mload(0x40)\n      dup1\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/15.sol\":227:479  function\r... */\n    tag_3:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_7\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_7:\n        /* \"contracts/15.sol\":227:479  function\r... */\n      pop\n      tag_8\n      tag_9\n      jump\t// in\n    tag_8:\n      mload(0x40)\n      dup1\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/15.sol\":636:895  function transfer(address payable receiver, uint amount) public payable returns(address) {\r... */\n    tag_6:\n        /* \"contracts/15.sol\":716:723  address */\n      0x00\n        /* \"contracts/15.sol\":771:777  amount */\n      dup2\n        /* \"contracts/15.sol\":746:767  address(this).balance */\n      selfbalance\n        /* \"contracts/15.sol\":746:777  address(this).balance >= amount */\n      lt\n      iszero\n        /* \"contracts/15.sol\":738:778  require(address(this).balance >= amount) */\n      tag_11\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_11:\n        /* \"contracts/15.sol\":811:813  20 */\n      0x14\n        /* \"contracts/15.sol\":799:808  msg.value */\n      callvalue\n        /* \"contracts/15.sol\":799:813  msg.value > 20 */\n      gt\n        /* \"contracts/15.sol\":791:814  require(msg.value > 20) */\n      tag_12\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_12:\n        /* \"contracts/15.sol\":827:835  receiver */\n      dup3\n        /* \"contracts/15.sol\":827:844  receiver.transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/15.sol\":827:852  receiver.transfer(amount) */\n      0x08fc\n        /* \"contracts/15.sol\":845:851  amount */\n      dup4\n        /* \"contracts/15.sol\":827:852  receiver.transfer(amount) */\n      swap1\n      dup2\n      iszero\n      mul\n      swap1\n      mload(0x40)\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup9\n      dup9\n      call\n      swap4\n      pop\n      pop\n      pop\n      pop\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_13\n      jumpi\n        /* \"--CODEGEN--\":45:61   */\n      returndatasize\n        /* \"--CODEGEN--\":42:43   */\n      0x00\n        /* \"--CODEGEN--\":39:40   */\n      dup1\n        /* \"--CODEGEN--\":24:62   */\n      returndatacopy\n        /* \"--CODEGEN--\":77:93   */\n      returndatasize\n        /* \"--CODEGEN--\":74:75   */\n      0x00\n        /* \"--CODEGEN--\":67:94   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_13:\n        /* \"contracts/15.sol\":827:852  receiver.transfer(amount) */\n      pop\n        /* \"contracts/15.sol\":880:884  this */\n      address\n        /* \"contracts/15.sol\":865:885  return address(this) */\n      swap1\n      pop\n        /* \"contracts/15.sol\":636:895  function transfer(address payable receiver, uint amount) public payable returns(address) {\r... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/15.sol\":227:479  function\r... */\n    tag_9:\n        /* \"contracts/15.sol\":267:274  address */\n      0x00\n        /* \"contracts/15.sol\":464:468  this */\n      address\n        /* \"contracts/15.sol\":449:469  return address(this) */\n      swap1\n      pop\n        /* \"contracts/15.sol\":227:479  function\r... */\n      swap1\n      jump\t// out\n\n    auxdata: 0xa265627a7a72315820ba804a0226f2d3cd891f25280f7aa0b28e3406b62411e88a3790219d91b02a2f64736f6c63430005110032\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "60806040526101bc806100136000396000f3fe6080604052600436106100295760003560e01c8063a9059cbb1461002e578063c2985578146100bc575b600080fd5b61007a6004803603604081101561004457600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610113565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156100c857600080fd5b506100d161017f565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b60008147101561012257600080fd5b6014341161012f57600080fd5b8273ffffffffffffffffffffffffffffffffffffffff166108fc839081150290604051600060405180830381858888f19350505050158015610175573d6000803e3d6000fd5b5030905092915050565b60003090509056fea265627a7a72315820ba804a0226f2d3cd891f25280f7aa0b28e3406b62411e88a3790219d91b02a2f64736f6c63430005110032",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH2 0x1BC DUP1 PUSH2 0x13 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x29 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x2E JUMPI DUP1 PUSH4 0xC2985578 EQ PUSH2 0xBC JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x7A PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x44 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x113 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xC8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xD1 PUSH2 0x17F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP2 SELFBALANCE LT ISZERO PUSH2 0x122 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x14 CALLVALUE GT PUSH2 0x12F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC DUP4 SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x175 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP ADDRESS SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 ADDRESS SWAP1 POP SWAP1 JUMP INVALID LOG2 PUSH6 0x627A7A723158 KECCAK256 0xBA DUP1 0x4A MUL 0x26 CALLCODE 0xD3 0xCD DUP10 0x1F 0x25 0x28 0xF PUSH27 0xA0B28E3406B62411E88A3790219D91B02A2F64736F6C6343000511 STOP ORIGIN ",
							"sourceMap": "27:1044:0:-;;;;;;;;;"
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "6080604052600436106100295760003560e01c8063a9059cbb1461002e578063c2985578146100bc575b600080fd5b61007a6004803603604081101561004457600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610113565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156100c857600080fd5b506100d161017f565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b60008147101561012257600080fd5b6014341161012f57600080fd5b8273ffffffffffffffffffffffffffffffffffffffff166108fc839081150290604051600060405180830381858888f19350505050158015610175573d6000803e3d6000fd5b5030905092915050565b60003090509056fea265627a7a72315820ba804a0226f2d3cd891f25280f7aa0b28e3406b62411e88a3790219d91b02a2f64736f6c63430005110032",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x29 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x2E JUMPI DUP1 PUSH4 0xC2985578 EQ PUSH2 0xBC JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x7A PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x44 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x113 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xC8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xD1 PUSH2 0x17F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP2 SELFBALANCE LT ISZERO PUSH2 0x122 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x14 CALLVALUE GT PUSH2 0x12F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC DUP4 SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x175 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP ADDRESS SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 ADDRESS SWAP1 POP SWAP1 JUMP INVALID LOG2 PUSH6 0x627A7A723158 KECCAK256 0xBA DUP1 0x4A MUL 0x26 CALLCODE 0xD3 0xCD DUP10 0x1F 0x25 0x28 0xF PUSH27 0xA0B28E3406B62411E88A3790219D91B02A2F64736F6C6343000511 STOP ORIGIN ",
							"sourceMap": "27:1044:0:-;;;;;;;;;;;;;;;;;;;;;;;;;;636:259;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;636:259:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;227:252;;8:9:-1;5:2;;;30:1;27;20:12;5:2;227:252:0;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;636:259;716:7;771:6;746:21;:31;;738:40;;;;;;811:2;799:9;:14;791:23;;;;;;827:8;:17;;:25;845:6;827:25;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;827:25:0;880:4;865:20;;636:259;;;;:::o;227:252::-;267:7;464:4;449:20;;227:252;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "88800",
								"executionCost": "111",
								"totalCost": "88911"
							},
							"external": {
								"foo()": "224",
								"transfer(address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 27,
									"end": 1071,
									"name": "PUSH",
									"value": "80"
								},
								{
									"begin": 27,
									"end": 1071,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 27,
									"end": 1071,
									"name": "MSTORE"
								},
								{
									"begin": 27,
									"end": 1071,
									"name": "PUSH #[$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 27,
									"end": 1071,
									"name": "DUP1"
								},
								{
									"begin": 27,
									"end": 1071,
									"name": "PUSH [$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 27,
									"end": 1071,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 27,
									"end": 1071,
									"name": "CODECOPY"
								},
								{
									"begin": 27,
									"end": 1071,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 27,
									"end": 1071,
									"name": "RETURN"
								}
							],
							".data": {
								"0": {
									".auxdata": "a265627a7a72315820ba804a0226f2d3cd891f25280f7aa0b28e3406b62411e88a3790219d91b02a2f64736f6c63430005110032",
									".code": [
										{
											"begin": 27,
											"end": 1071,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 27,
											"end": 1071,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 27,
											"end": 1071,
											"name": "MSTORE"
										},
										{
											"begin": 27,
											"end": 1071,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 27,
											"end": 1071,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 27,
											"end": 1071,
											"name": "LT"
										},
										{
											"begin": 27,
											"end": 1071,
											"name": "PUSH [tag]",
											"value": "1"
										},
										{
											"begin": 27,
											"end": 1071,
											"name": "JUMPI"
										},
										{
											"begin": 27,
											"end": 1071,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 1071,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 27,
											"end": 1071,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": 27,
											"end": 1071,
											"name": "SHR"
										},
										{
											"begin": 27,
											"end": 1071,
											"name": "DUP1"
										},
										{
											"begin": 27,
											"end": 1071,
											"name": "PUSH",
											"value": "A9059CBB"
										},
										{
											"begin": 27,
											"end": 1071,
											"name": "EQ"
										},
										{
											"begin": 27,
											"end": 1071,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 27,
											"end": 1071,
											"name": "JUMPI"
										},
										{
											"begin": 27,
											"end": 1071,
											"name": "DUP1"
										},
										{
											"begin": 27,
											"end": 1071,
											"name": "PUSH",
											"value": "C2985578"
										},
										{
											"begin": 27,
											"end": 1071,
											"name": "EQ"
										},
										{
											"begin": 27,
											"end": 1071,
											"name": "PUSH [tag]",
											"value": "3"
										},
										{
											"begin": 27,
											"end": 1071,
											"name": "JUMPI"
										},
										{
											"begin": 27,
											"end": 1071,
											"name": "tag",
											"value": "1"
										},
										{
											"begin": 27,
											"end": 1071,
											"name": "JUMPDEST"
										},
										{
											"begin": 27,
											"end": 1071,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 1071,
											"name": "DUP1"
										},
										{
											"begin": 27,
											"end": 1071,
											"name": "REVERT"
										},
										{
											"begin": 636,
											"end": 895,
											"name": "tag",
											"value": "2"
										},
										{
											"begin": 636,
											"end": 895,
											"name": "JUMPDEST"
										},
										{
											"begin": 636,
											"end": 895,
											"name": "PUSH [tag]",
											"value": "4"
										},
										{
											"begin": 636,
											"end": 895,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 636,
											"end": 895,
											"name": "DUP1"
										},
										{
											"begin": 636,
											"end": 895,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 636,
											"end": 895,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "5"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "5"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 636,
											"end": 895,
											"name": "DUP2"
										},
										{
											"begin": 636,
											"end": 895,
											"name": "ADD"
										},
										{
											"begin": 636,
											"end": 895,
											"name": "SWAP1"
										},
										{
											"begin": 636,
											"end": 895,
											"name": "DUP1"
										},
										{
											"begin": 636,
											"end": 895,
											"name": "DUP1"
										},
										{
											"begin": 636,
											"end": 895,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 636,
											"end": 895,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 636,
											"end": 895,
											"name": "AND"
										},
										{
											"begin": 636,
											"end": 895,
											"name": "SWAP1"
										},
										{
											"begin": 636,
											"end": 895,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 636,
											"end": 895,
											"name": "ADD"
										},
										{
											"begin": 636,
											"end": 895,
											"name": "SWAP1"
										},
										{
											"begin": 636,
											"end": 895,
											"name": "SWAP3"
										},
										{
											"begin": 636,
											"end": 895,
											"name": "SWAP2"
										},
										{
											"begin": 636,
											"end": 895,
											"name": "SWAP1"
										},
										{
											"begin": 636,
											"end": 895,
											"name": "DUP1"
										},
										{
											"begin": 636,
											"end": 895,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 636,
											"end": 895,
											"name": "SWAP1"
										},
										{
											"begin": 636,
											"end": 895,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 636,
											"end": 895,
											"name": "ADD"
										},
										{
											"begin": 636,
											"end": 895,
											"name": "SWAP1"
										},
										{
											"begin": 636,
											"end": 895,
											"name": "SWAP3"
										},
										{
											"begin": 636,
											"end": 895,
											"name": "SWAP2"
										},
										{
											"begin": 636,
											"end": 895,
											"name": "SWAP1"
										},
										{
											"begin": 636,
											"end": 895,
											"name": "POP"
										},
										{
											"begin": 636,
											"end": 895,
											"name": "POP"
										},
										{
											"begin": 636,
											"end": 895,
											"name": "POP"
										},
										{
											"begin": 636,
											"end": 895,
											"name": "PUSH [tag]",
											"value": "6"
										},
										{
											"begin": 636,
											"end": 895,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 636,
											"end": 895,
											"name": "tag",
											"value": "4"
										},
										{
											"begin": 636,
											"end": 895,
											"name": "JUMPDEST"
										},
										{
											"begin": 636,
											"end": 895,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 636,
											"end": 895,
											"name": "MLOAD"
										},
										{
											"begin": 636,
											"end": 895,
											"name": "DUP1"
										},
										{
											"begin": 636,
											"end": 895,
											"name": "DUP3"
										},
										{
											"begin": 636,
											"end": 895,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 636,
											"end": 895,
											"name": "AND"
										},
										{
											"begin": 636,
											"end": 895,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 636,
											"end": 895,
											"name": "AND"
										},
										{
											"begin": 636,
											"end": 895,
											"name": "DUP2"
										},
										{
											"begin": 636,
											"end": 895,
											"name": "MSTORE"
										},
										{
											"begin": 636,
											"end": 895,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 636,
											"end": 895,
											"name": "ADD"
										},
										{
											"begin": 636,
											"end": 895,
											"name": "SWAP2"
										},
										{
											"begin": 636,
											"end": 895,
											"name": "POP"
										},
										{
											"begin": 636,
											"end": 895,
											"name": "POP"
										},
										{
											"begin": 636,
											"end": 895,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 636,
											"end": 895,
											"name": "MLOAD"
										},
										{
											"begin": 636,
											"end": 895,
											"name": "DUP1"
										},
										{
											"begin": 636,
											"end": 895,
											"name": "SWAP2"
										},
										{
											"begin": 636,
											"end": 895,
											"name": "SUB"
										},
										{
											"begin": 636,
											"end": 895,
											"name": "SWAP1"
										},
										{
											"begin": 636,
											"end": 895,
											"name": "RETURN"
										},
										{
											"begin": 227,
											"end": 479,
											"name": "tag",
											"value": "3"
										},
										{
											"begin": 227,
											"end": 479,
											"name": "JUMPDEST"
										},
										{
											"begin": 227,
											"end": 479,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "7"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "7"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 227,
											"end": 479,
											"name": "POP"
										},
										{
											"begin": 227,
											"end": 479,
											"name": "PUSH [tag]",
											"value": "8"
										},
										{
											"begin": 227,
											"end": 479,
											"name": "PUSH [tag]",
											"value": "9"
										},
										{
											"begin": 227,
											"end": 479,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 227,
											"end": 479,
											"name": "tag",
											"value": "8"
										},
										{
											"begin": 227,
											"end": 479,
											"name": "JUMPDEST"
										},
										{
											"begin": 227,
											"end": 479,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 227,
											"end": 479,
											"name": "MLOAD"
										},
										{
											"begin": 227,
											"end": 479,
											"name": "DUP1"
										},
										{
											"begin": 227,
											"end": 479,
											"name": "DUP3"
										},
										{
											"begin": 227,
											"end": 479,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 227,
											"end": 479,
											"name": "AND"
										},
										{
											"begin": 227,
											"end": 479,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 227,
											"end": 479,
											"name": "AND"
										},
										{
											"begin": 227,
											"end": 479,
											"name": "DUP2"
										},
										{
											"begin": 227,
											"end": 479,
											"name": "MSTORE"
										},
										{
											"begin": 227,
											"end": 479,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 227,
											"end": 479,
											"name": "ADD"
										},
										{
											"begin": 227,
											"end": 479,
											"name": "SWAP2"
										},
										{
											"begin": 227,
											"end": 479,
											"name": "POP"
										},
										{
											"begin": 227,
											"end": 479,
											"name": "POP"
										},
										{
											"begin": 227,
											"end": 479,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 227,
											"end": 479,
											"name": "MLOAD"
										},
										{
											"begin": 227,
											"end": 479,
											"name": "DUP1"
										},
										{
											"begin": 227,
											"end": 479,
											"name": "SWAP2"
										},
										{
											"begin": 227,
											"end": 479,
											"name": "SUB"
										},
										{
											"begin": 227,
											"end": 479,
											"name": "SWAP1"
										},
										{
											"begin": 227,
											"end": 479,
											"name": "RETURN"
										},
										{
											"begin": 636,
											"end": 895,
											"name": "tag",
											"value": "6"
										},
										{
											"begin": 636,
											"end": 895,
											"name": "JUMPDEST"
										},
										{
											"begin": 716,
											"end": 723,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 771,
											"end": 777,
											"name": "DUP2"
										},
										{
											"begin": 746,
											"end": 767,
											"name": "SELFBALANCE"
										},
										{
											"begin": 746,
											"end": 777,
											"name": "LT"
										},
										{
											"begin": 746,
											"end": 777,
											"name": "ISZERO"
										},
										{
											"begin": 738,
											"end": 778,
											"name": "PUSH [tag]",
											"value": "11"
										},
										{
											"begin": 738,
											"end": 778,
											"name": "JUMPI"
										},
										{
											"begin": 738,
											"end": 778,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 738,
											"end": 778,
											"name": "DUP1"
										},
										{
											"begin": 738,
											"end": 778,
											"name": "REVERT"
										},
										{
											"begin": 738,
											"end": 778,
											"name": "tag",
											"value": "11"
										},
										{
											"begin": 738,
											"end": 778,
											"name": "JUMPDEST"
										},
										{
											"begin": 811,
											"end": 813,
											"name": "PUSH",
											"value": "14"
										},
										{
											"begin": 799,
											"end": 808,
											"name": "CALLVALUE"
										},
										{
											"begin": 799,
											"end": 813,
											"name": "GT"
										},
										{
											"begin": 791,
											"end": 814,
											"name": "PUSH [tag]",
											"value": "12"
										},
										{
											"begin": 791,
											"end": 814,
											"name": "JUMPI"
										},
										{
											"begin": 791,
											"end": 814,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 791,
											"end": 814,
											"name": "DUP1"
										},
										{
											"begin": 791,
											"end": 814,
											"name": "REVERT"
										},
										{
											"begin": 791,
											"end": 814,
											"name": "tag",
											"value": "12"
										},
										{
											"begin": 791,
											"end": 814,
											"name": "JUMPDEST"
										},
										{
											"begin": 827,
											"end": 835,
											"name": "DUP3"
										},
										{
											"begin": 827,
											"end": 844,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 827,
											"end": 844,
											"name": "AND"
										},
										{
											"begin": 827,
											"end": 852,
											"name": "PUSH",
											"value": "8FC"
										},
										{
											"begin": 845,
											"end": 851,
											"name": "DUP4"
										},
										{
											"begin": 827,
											"end": 852,
											"name": "SWAP1"
										},
										{
											"begin": 827,
											"end": 852,
											"name": "DUP2"
										},
										{
											"begin": 827,
											"end": 852,
											"name": "ISZERO"
										},
										{
											"begin": 827,
											"end": 852,
											"name": "MUL"
										},
										{
											"begin": 827,
											"end": 852,
											"name": "SWAP1"
										},
										{
											"begin": 827,
											"end": 852,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 827,
											"end": 852,
											"name": "MLOAD"
										},
										{
											"begin": 827,
											"end": 852,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 827,
											"end": 852,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 827,
											"end": 852,
											"name": "MLOAD"
										},
										{
											"begin": 827,
											"end": 852,
											"name": "DUP1"
										},
										{
											"begin": 827,
											"end": 852,
											"name": "DUP4"
										},
										{
											"begin": 827,
											"end": 852,
											"name": "SUB"
										},
										{
											"begin": 827,
											"end": 852,
											"name": "DUP2"
										},
										{
											"begin": 827,
											"end": 852,
											"name": "DUP6"
										},
										{
											"begin": 827,
											"end": 852,
											"name": "DUP9"
										},
										{
											"begin": 827,
											"end": 852,
											"name": "DUP9"
										},
										{
											"begin": 827,
											"end": 852,
											"name": "CALL"
										},
										{
											"begin": 827,
											"end": 852,
											"name": "SWAP4"
										},
										{
											"begin": 827,
											"end": 852,
											"name": "POP"
										},
										{
											"begin": 827,
											"end": 852,
											"name": "POP"
										},
										{
											"begin": 827,
											"end": 852,
											"name": "POP"
										},
										{
											"begin": 827,
											"end": 852,
											"name": "POP"
										},
										{
											"begin": 827,
											"end": 852,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "13"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 45,
											"end": 61,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 42,
											"end": 43,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 39,
											"end": 40,
											"name": "DUP1"
										},
										{
											"begin": 24,
											"end": 62,
											"name": "RETURNDATACOPY"
										},
										{
											"begin": 77,
											"end": 93,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 74,
											"end": 75,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 67,
											"end": 94,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "13"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 827,
											"end": 852,
											"name": "POP"
										},
										{
											"begin": 880,
											"end": 884,
											"name": "ADDRESS"
										},
										{
											"begin": 865,
											"end": 885,
											"name": "SWAP1"
										},
										{
											"begin": 865,
											"end": 885,
											"name": "POP"
										},
										{
											"begin": 636,
											"end": 895,
											"name": "SWAP3"
										},
										{
											"begin": 636,
											"end": 895,
											"name": "SWAP2"
										},
										{
											"begin": 636,
											"end": 895,
											"name": "POP"
										},
										{
											"begin": 636,
											"end": 895,
											"name": "POP"
										},
										{
											"begin": 636,
											"end": 895,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 227,
											"end": 479,
											"name": "tag",
											"value": "9"
										},
										{
											"begin": 227,
											"end": 479,
											"name": "JUMPDEST"
										},
										{
											"begin": 267,
											"end": 274,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 464,
											"end": 468,
											"name": "ADDRESS"
										},
										{
											"begin": 449,
											"end": 469,
											"name": "SWAP1"
										},
										{
											"begin": 449,
											"end": 469,
											"name": "POP"
										},
										{
											"begin": 227,
											"end": 479,
											"name": "SWAP1"
										},
										{
											"begin": 227,
											"end": 479,
											"name": "JUMP",
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"foo()": "c2985578",
							"transfer(address,uint256)": "a9059cbb"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.5.17+commit.d19bba13\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"constructor\"},{\"constant\":true,\"inputs\":[],\"name\":\"foo\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"contracts/15.sol\":\"MyContr\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/15.sol\":{\"keccak256\":\"0xa00a2d69bddd2c8370a02159d9036359e6aa7994d59d40353d058134327bb825\",\"urls\":[\"bzz-raw://f126c7c120613ca325a573f373f55d218ec786fc077de7a9220dd9a238d0e83e\",\"dweb:/ipfs/QmPGJVZShAJH9qbuzkypAubnwAAcJbxXa2ghqZfam8pQSn\"]}},\"version\":1}",
					"userdoc": {
						"methods": {}
					}
				}
			}
		},
		"sources": {
			"contracts/15.sol": {
				"ast": {
					"absolutePath": "contracts/15.sol",
					"exportedSymbols": {
						"MyContr": [
							52
						]
					},
					"id": 53,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.5",
								".1"
							],
							"nodeType": "PragmaDirective",
							"src": "0:23:0"
						},
						{
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": null,
							"fullyImplemented": true,
							"id": 52,
							"linearizedBaseContracts": [
								52
							],
							"name": "MyContr",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 4,
										"nodeType": "Block",
										"src": "217:2:0",
										"statements": []
									},
									"documentation": null,
									"id": 5,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "199:2:0"
									},
									"returnParameters": {
										"id": 3,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "217:0:0"
									},
									"scope": 52,
									"src": "188:31:0",
									"stateMutability": "payable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 14,
										"nodeType": "Block",
										"src": "283:196:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 11,
															"name": "this",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 81,
															"src": "464:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_MyContr_$52",
																"typeString": "contract MyContr"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_MyContr_$52",
																"typeString": "contract MyContr"
															}
														],
														"id": 10,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "456:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_address_$",
															"typeString": "type(address)"
														},
														"typeName": "address"
													},
													"id": 12,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "456:13:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 9,
												"id": 13,
												"nodeType": "Return",
												"src": "449:20:0"
											}
										]
									},
									"documentation": null,
									"id": 15,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "foo",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 6,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "244:2:0"
									},
									"returnParameters": {
										"id": 9,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 8,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 15,
												"src": "267:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 7,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "267:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "266:9:0"
									},
									"scope": 52,
									"src": "227:252:0",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 50,
										"nodeType": "Block",
										"src": "725:170:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 30,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 26,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 81,
																			"src": "754:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_MyContr_$52",
																				"typeString": "contract MyContr"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_MyContr_$52",
																				"typeString": "contract MyContr"
																			}
																		],
																		"id": 25,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "746:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": "address"
																	},
																	"id": 27,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "746:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 28,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "746:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 29,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 19,
																"src": "771:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "746:31:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 24,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															70,
															71
														],
														"referencedDeclaration": 70,
														"src": "738:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 31,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "738:40:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 32,
												"nodeType": "ExpressionStatement",
												"src": "738:40:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 37,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 34,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 67,
																	"src": "799:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 35,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "value",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "799:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "3230",
																"id": 36,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "811:2:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_20_by_1",
																	"typeString": "int_const 20"
																},
																"value": "20"
															},
															"src": "799:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 33,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															70,
															71
														],
														"referencedDeclaration": 70,
														"src": "791:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 38,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "791:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 39,
												"nodeType": "ExpressionStatement",
												"src": "791:23:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 43,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 19,
															"src": "845:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"argumentTypes": null,
															"id": 40,
															"name": "receiver",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 17,
															"src": "827:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"id": 42,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "827:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 44,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "827:25:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 45,
												"nodeType": "ExpressionStatement",
												"src": "827:25:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 47,
															"name": "this",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 81,
															"src": "880:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_MyContr_$52",
																"typeString": "contract MyContr"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_MyContr_$52",
																"typeString": "contract MyContr"
															}
														],
														"id": 46,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "872:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_address_$",
															"typeString": "type(address)"
														},
														"typeName": "address"
													},
													"id": 48,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "872:13:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 23,
												"id": 49,
												"nodeType": "Return",
												"src": "865:20:0"
											}
										]
									},
									"documentation": null,
									"id": 51,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 20,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 17,
												"name": "receiver",
												"nodeType": "VariableDeclaration",
												"scope": 51,
												"src": "654:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 16,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "654:15:0",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 19,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 51,
												"src": "680:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 18,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "680:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "653:39:0"
									},
									"returnParameters": {
										"id": 23,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 22,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 51,
												"src": "716:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 21,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "716:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "715:9:0"
									},
									"scope": 52,
									"src": "636:259:0",
									"stateMutability": "payable",
									"superFunction": null,
									"visibility": "public"
								}
							],
							"scope": 53,
							"src": "27:1044:0"
						}
					],
					"src": "0:1071:0"
				},
				"id": 0
			}
		}
	}
}