{
	"id": "d225f12bbeaa72836dc81b65ff58fff1",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.5.17",
	"solcLongVersion": "0.5.17+commit.d19bba13",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/23.sol": {
				"content": "pragma solidity ^0.5.0;\r\n\r\ncontract Owner {\r\n   address owner;\r\n   constructor() public {\r\n      owner = msg.sender;\r\n   }\r\n   modifier onlyOwner {\r\n      require(msg.sender == owner);\r\n      _;\r\n   }\r\n   modifier costs(uint price) {\r\n      if (msg.value >= price) {\r\n         _;\r\n      }\r\n   }\r\n}\r\ncontract Register is Owner {\r\n   mapping (address => bool) registeredAddresses;\r\n   uint price;\r\n   constructor(uint initialPrice) public { price = initialPrice; }\r\n   \r\n   function register() public payable costs(price) {\r\n      registeredAddresses[msg.sender] = true;\r\n   }\r\n   function changePrice(uint _price) public onlyOwner {\r\n      price = _price;\r\n   }\r\n}\r\n\r\n// Modifier"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"contracts/23.sol": {
				"Owner": {
					"abi": [
						{
							"inputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "constructor"
						}
					],
					"devdoc": {
						"methods": {}
					},
					"evm": {
						"assembly": "    /* \"contracts/23.sol\":27:297  contract Owner {\r... */\n  mstore(0x40, 0x80)\n    /* \"contracts/23.sol\":67:122  constructor() public {\r... */\n  callvalue\n    /* \"--CODEGEN--\":8:17   */\n  dup1\n    /* \"--CODEGEN--\":5:7   */\n  iszero\n  tag_1\n  jumpi\n    /* \"--CODEGEN--\":30:31   */\n  0x00\n    /* \"--CODEGEN--\":27:28   */\n  dup1\n    /* \"--CODEGEN--\":20:32   */\n  revert\n    /* \"--CODEGEN--\":5:7   */\ntag_1:\n    /* \"contracts/23.sol\":67:122  constructor() public {\r... */\n  pop\n    /* \"contracts/23.sol\":105:115  msg.sender */\n  caller\n    /* \"contracts/23.sol\":97:102  owner */\n  0x00\n  dup1\n    /* \"contracts/23.sol\":97:115  owner = msg.sender */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/23.sol\":27:297  contract Owner {\r... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/23.sol\":27:297  contract Owner {\r... */\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa265627a7a723158202f5fba15af581673fad291e857eba8b3be558db19ecd6dbfabe1593cc373de6664736f6c63430005110032\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "6080604052348015600f57600080fd5b50336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550603e80605d6000396000f3fe6080604052600080fdfea265627a7a723158202f5fba15af581673fad291e857eba8b3be558db19ecd6dbfabe1593cc373de6664736f6c63430005110032",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLER PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x3E DUP1 PUSH1 0x5D PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH6 0x627A7A723158 KECCAK256 0x2F 0x5F 0xBA ISZERO 0xAF PC AND PUSH20 0xFAD291E857EBA8B3BE558DB19ECD6DBFABE1593C 0xC3 PUSH20 0xDE6664736F6C6343000511003200000000000000 ",
							"sourceMap": "27:270:0:-;;;67:55;8:9:-1;5:2;;;30:1;27;20:12;5:2;67:55:0;105:10;97:5;;:18;;;;;;;;;;;;;;;;;;27:270;;;;;;"
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "6080604052600080fdfea265627a7a723158202f5fba15af581673fad291e857eba8b3be558db19ecd6dbfabe1593cc373de6664736f6c63430005110032",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH6 0x627A7A723158 KECCAK256 0x2F 0x5F 0xBA ISZERO 0xAF PC AND PUSH20 0xFAD291E857EBA8B3BE558DB19ECD6DBFABE1593C 0xC3 PUSH20 0xDE6664736F6C6343000511003200000000000000 ",
							"sourceMap": "27:270:0:-;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "12400",
								"executionCost": "20932",
								"totalCost": "33332"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 27,
									"end": 297,
									"name": "PUSH",
									"value": "80"
								},
								{
									"begin": 27,
									"end": 297,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 27,
									"end": 297,
									"name": "MSTORE"
								},
								{
									"begin": 67,
									"end": 122,
									"name": "CALLVALUE"
								},
								{
									"begin": 8,
									"end": 17,
									"name": "DUP1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "ISZERO"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "PUSH [tag]",
									"value": "1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "JUMPI"
								},
								{
									"begin": 30,
									"end": 31,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 27,
									"end": 28,
									"name": "DUP1"
								},
								{
									"begin": 20,
									"end": 32,
									"name": "REVERT"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "tag",
									"value": "1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "JUMPDEST"
								},
								{
									"begin": 67,
									"end": 122,
									"name": "POP"
								},
								{
									"begin": 105,
									"end": 115,
									"name": "CALLER"
								},
								{
									"begin": 97,
									"end": 102,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 97,
									"end": 102,
									"name": "DUP1"
								},
								{
									"begin": 97,
									"end": 115,
									"name": "PUSH",
									"value": "100"
								},
								{
									"begin": 97,
									"end": 115,
									"name": "EXP"
								},
								{
									"begin": 97,
									"end": 115,
									"name": "DUP2"
								},
								{
									"begin": 97,
									"end": 115,
									"name": "SLOAD"
								},
								{
									"begin": 97,
									"end": 115,
									"name": "DUP2"
								},
								{
									"begin": 97,
									"end": 115,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 97,
									"end": 115,
									"name": "MUL"
								},
								{
									"begin": 97,
									"end": 115,
									"name": "NOT"
								},
								{
									"begin": 97,
									"end": 115,
									"name": "AND"
								},
								{
									"begin": 97,
									"end": 115,
									"name": "SWAP1"
								},
								{
									"begin": 97,
									"end": 115,
									"name": "DUP4"
								},
								{
									"begin": 97,
									"end": 115,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 97,
									"end": 115,
									"name": "AND"
								},
								{
									"begin": 97,
									"end": 115,
									"name": "MUL"
								},
								{
									"begin": 97,
									"end": 115,
									"name": "OR"
								},
								{
									"begin": 97,
									"end": 115,
									"name": "SWAP1"
								},
								{
									"begin": 97,
									"end": 115,
									"name": "SSTORE"
								},
								{
									"begin": 97,
									"end": 115,
									"name": "POP"
								},
								{
									"begin": 27,
									"end": 297,
									"name": "PUSH #[$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 27,
									"end": 297,
									"name": "DUP1"
								},
								{
									"begin": 27,
									"end": 297,
									"name": "PUSH [$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 27,
									"end": 297,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 27,
									"end": 297,
									"name": "CODECOPY"
								},
								{
									"begin": 27,
									"end": 297,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 27,
									"end": 297,
									"name": "RETURN"
								}
							],
							".data": {
								"0": {
									".auxdata": "a265627a7a723158202f5fba15af581673fad291e857eba8b3be558db19ecd6dbfabe1593cc373de6664736f6c63430005110032",
									".code": [
										{
											"begin": 27,
											"end": 297,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 27,
											"end": 297,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 27,
											"end": 297,
											"name": "MSTORE"
										},
										{
											"begin": 27,
											"end": 297,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 297,
											"name": "DUP1"
										},
										{
											"begin": 27,
											"end": 297,
											"name": "REVERT"
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.5.17+commit.d19bba13\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"}],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"contracts/23.sol\":\"Owner\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/23.sol\":{\"keccak256\":\"0x73826307e6564698135b8d2076ef85891908ebdb3ef4a4a61e19071103ff38d7\",\"urls\":[\"bzz-raw://bbe6a0eafc33cc4c17eefffaa6eb417a3b28005bd3211f618c96c5a6115b21ed\",\"dweb:/ipfs/QmV11c7cgJWyhucpVuiQkz1f2dBP8Bhpegp9jsXFdGrxUq\"]}},\"version\":1}",
					"userdoc": {
						"methods": {}
					}
				},
				"Register": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "initialPrice",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_price",
									"type": "uint256"
								}
							],
							"name": "changePrice",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [],
							"name": "register",
							"outputs": [],
							"payable": true,
							"stateMutability": "payable",
							"type": "function"
						}
					],
					"devdoc": {
						"methods": {}
					},
					"evm": {
						"assembly": "    /* \"contracts/23.sol\":299:663  contract Register is Owner {\r... */\n  mstore(0x40, 0x80)\n    /* \"contracts/23.sol\":399:462  constructor(uint initialPrice) public { price = initialPrice; } */\n  callvalue\n    /* \"--CODEGEN--\":8:17   */\n  dup1\n    /* \"--CODEGEN--\":5:7   */\n  iszero\n  tag_1\n  jumpi\n    /* \"--CODEGEN--\":30:31   */\n  0x00\n    /* \"--CODEGEN--\":27:28   */\n  dup1\n    /* \"--CODEGEN--\":20:32   */\n  revert\n    /* \"--CODEGEN--\":5:7   */\ntag_1:\n    /* \"contracts/23.sol\":399:462  constructor(uint initialPrice) public { price = initialPrice; } */\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n    /* \"--CODEGEN--\":13:15   */\n  0x20\n    /* \"--CODEGEN--\":8:11   */\n  dup2\n    /* \"--CODEGEN--\":5:16   */\n  lt\n    /* \"--CODEGEN--\":2:4   */\n  iszero\n  tag_2\n  jumpi\n    /* \"--CODEGEN--\":29:30   */\n  0x00\n    /* \"--CODEGEN--\":26:27   */\n  dup1\n    /* \"--CODEGEN--\":19:31   */\n  revert\n    /* \"--CODEGEN--\":2:4   */\ntag_2:\n    /* \"contracts/23.sol\":399:462  constructor(uint initialPrice) public { price = initialPrice; } */\n  dup2\n  add\n  swap1\n  dup1\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  swap1\n  swap3\n  swap2\n  swap1\n  pop\n  pop\n  pop\n    /* \"contracts/23.sol\":105:115  msg.sender */\n  caller\n    /* \"contracts/23.sol\":97:102  owner */\n  0x00\n  dup1\n    /* \"contracts/23.sol\":97:115  owner = msg.sender */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/23.sol\":447:459  initialPrice */\n  dup1\n    /* \"contracts/23.sol\":439:444  price */\n  0x02\n    /* \"contracts/23.sol\":439:459  price = initialPrice */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/23.sol\":399:462  constructor(uint initialPrice) public { price = initialPrice; } */\n  pop\n    /* \"contracts/23.sol\":299:663  contract Register is Owner {\r... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/23.sol\":299:663  contract Register is Owner {\r... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x1aa3a008\n      eq\n      tag_2\n      jumpi\n      dup1\n      0xa2b40d19\n      eq\n      tag_3\n      jumpi\n    tag_1:\n      0x00\n      dup1\n      revert\n        /* \"contracts/23.sol\":472:574  function register() public payable costs(price) {\r... */\n    tag_2:\n      tag_4\n      tag_5\n      jump\t// in\n    tag_4:\n      stop\n        /* \"contracts/23.sol\":579:660  function changePrice(uint _price) public onlyOwner {\r... */\n    tag_3:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_6\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_6:\n        /* \"contracts/23.sol\":579:660  function changePrice(uint _price) public onlyOwner {\r... */\n      pop\n      tag_7\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_8\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_8:\n        /* \"contracts/23.sol\":579:660  function changePrice(uint _price) public onlyOwner {\r... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_9\n      jump\t// in\n    tag_7:\n      stop\n        /* \"contracts/23.sol\":472:574  function register() public payable costs(price) {\r... */\n    tag_5:\n        /* \"contracts/23.sol\":513:518  price */\n      sload(0x02)\n        /* \"contracts/23.sol\":258:263  price */\n      dup1\n        /* \"contracts/23.sol\":245:254  msg.value */\n      callvalue\n        /* \"contracts/23.sol\":245:263  msg.value >= price */\n      lt\n        /* \"contracts/23.sol\":241:288  if (msg.value >= price) {\r... */\n      tag_11\n      jumpi\n        /* \"contracts/23.sol\":563:567  true */\n      0x01\n        /* \"contracts/23.sol\":529:548  registeredAddresses */\n      dup1\n        /* \"contracts/23.sol\":529:560  registeredAddresses[msg.sender] */\n      0x00\n        /* \"contracts/23.sol\":549:559  msg.sender */\n      caller\n        /* \"contracts/23.sol\":529:560  registeredAddresses[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/23.sol\":529:567  registeredAddresses[msg.sender] = true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/23.sol\":241:288  if (msg.value >= price) {\r... */\n    tag_11:\n        /* \"contracts/23.sol\":472:574  function register() public payable costs(price) {\r... */\n      pop\n      jump\t// out\n        /* \"contracts/23.sol\":579:660  function changePrice(uint _price) public onlyOwner {\r... */\n    tag_9:\n        /* \"contracts/23.sol\":177:182  owner */\n      0x00\n      dup1\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/23.sol\":163:182  msg.sender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/23.sol\":163:173  msg.sender */\n      caller\n        /* \"contracts/23.sol\":163:182  msg.sender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/23.sol\":155:183  require(msg.sender == owner) */\n      tag_14\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_14:\n        /* \"contracts/23.sol\":647:653  _price */\n      dup1\n        /* \"contracts/23.sol\":639:644  price */\n      0x02\n        /* \"contracts/23.sol\":639:653  price = _price */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/23.sol\":579:660  function changePrice(uint _price) public onlyOwner {\r... */\n      pop\n      jump\t// out\n\n    auxdata: 0xa265627a7a72315820bbed770c6ce9f4632444439afcc2426095e8c3ee676c58f651d93fc36656efa564736f6c63430005110032\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b5060405161020b38038061020b8339818101604052602081101561003357600080fd5b8101908080519060200190929190505050336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600281905550506101708061009b6000396000f3fe6080604052600436106100295760003560e01c80631aa3a0081461002e578063a2b40d1914610038575b600080fd5b610036610073565b005b34801561004457600080fd5b506100716004803603602081101561005b57600080fd5b81019080803590602001909291905050506100d8565b005b6002548034106100d55760018060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505b50565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461013157600080fd5b806002819055505056fea265627a7a72315820bbed770c6ce9f4632444439afcc2426095e8c3ee676c58f651d93fc36656efa564736f6c63430005110032",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x20B CODESIZE SUB DUP1 PUSH2 0x20B DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x33 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP CALLER PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH1 0x2 DUP2 SWAP1 SSTORE POP POP PUSH2 0x170 DUP1 PUSH2 0x9B PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x29 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x1AA3A008 EQ PUSH2 0x2E JUMPI DUP1 PUSH4 0xA2B40D19 EQ PUSH2 0x38 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x36 PUSH2 0x73 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x44 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x71 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x5B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xD8 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x2 SLOAD DUP1 CALLVALUE LT PUSH2 0xD5 JUMPI PUSH1 0x1 DUP1 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x131 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH1 0x2 DUP2 SWAP1 SSTORE POP POP JUMP INVALID LOG2 PUSH6 0x627A7A723158 KECCAK256 0xBB 0xED PUSH24 0xC6CE9F4632444439AFCC2426095E8C3EE676C58F651D93F 0xC3 PUSH7 0x56EFA564736F6C PUSH4 0x43000511 STOP ORIGIN ",
							"sourceMap": "299:364:0:-;;;399:63;8:9:-1;5:2;;;30:1;27;20:12;5:2;399:63:0;;;;;;;;;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;399:63:0;;;;;;;;;;;;;;;;105:10;97:5;;:18;;;;;;;;;;;;;;;;;;447:12;439:5;:20;;;;399:63;299:364;;;;;;"
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "6080604052600436106100295760003560e01c80631aa3a0081461002e578063a2b40d1914610038575b600080fd5b610036610073565b005b34801561004457600080fd5b506100716004803603602081101561005b57600080fd5b81019080803590602001909291905050506100d8565b005b6002548034106100d55760018060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505b50565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461013157600080fd5b806002819055505056fea265627a7a72315820bbed770c6ce9f4632444439afcc2426095e8c3ee676c58f651d93fc36656efa564736f6c63430005110032",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x29 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x1AA3A008 EQ PUSH2 0x2E JUMPI DUP1 PUSH4 0xA2B40D19 EQ PUSH2 0x38 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x36 PUSH2 0x73 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x44 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x71 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x5B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xD8 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x2 SLOAD DUP1 CALLVALUE LT PUSH2 0xD5 JUMPI PUSH1 0x1 DUP1 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x131 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH1 0x2 DUP2 SWAP1 SSTORE POP POP JUMP INVALID LOG2 PUSH6 0x627A7A723158 KECCAK256 0xBB 0xED PUSH24 0xC6CE9F4632444439AFCC2426095E8C3EE676C58F651D93F 0xC3 PUSH7 0x56EFA564736F6C PUSH4 0x43000511 STOP ORIGIN ",
							"sourceMap": "299:364:0:-;;;;;;;;;;;;;;;;;;;;;;;;;;472:102;;;:::i;:::-;;579:81;;8:9:-1;5:2;;;30:1;27;20:12;5:2;579:81:0;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;579:81:0;;;;;;;;;;;;;;;;;:::i;:::-;;472:102;513:5;;258;245:9;:18;241:47;;563:4;529:19;:31;549:10;529:31;;;;;;;;;;;;;;;;:38;;;;;;;;;;;;;;;;;;241:47;472:102;:::o;579:81::-;177:5;;;;;;;;;;;163:19;;:10;:19;;;155:28;;;;;;647:6;639:5;:14;;;;579:81;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "73600",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"changePrice(uint256)": "21112",
								"register()": "21881"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 299,
									"end": 663,
									"name": "PUSH",
									"value": "80"
								},
								{
									"begin": 299,
									"end": 663,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 299,
									"end": 663,
									"name": "MSTORE"
								},
								{
									"begin": 399,
									"end": 462,
									"name": "CALLVALUE"
								},
								{
									"begin": 8,
									"end": 17,
									"name": "DUP1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "ISZERO"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "PUSH [tag]",
									"value": "1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "JUMPI"
								},
								{
									"begin": 30,
									"end": 31,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 27,
									"end": 28,
									"name": "DUP1"
								},
								{
									"begin": 20,
									"end": 32,
									"name": "REVERT"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "tag",
									"value": "1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "JUMPDEST"
								},
								{
									"begin": 399,
									"end": 462,
									"name": "POP"
								},
								{
									"begin": 399,
									"end": 462,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 399,
									"end": 462,
									"name": "MLOAD"
								},
								{
									"begin": 399,
									"end": 462,
									"name": "PUSHSIZE"
								},
								{
									"begin": 399,
									"end": 462,
									"name": "CODESIZE"
								},
								{
									"begin": 399,
									"end": 462,
									"name": "SUB"
								},
								{
									"begin": 399,
									"end": 462,
									"name": "DUP1"
								},
								{
									"begin": 399,
									"end": 462,
									"name": "PUSHSIZE"
								},
								{
									"begin": 399,
									"end": 462,
									"name": "DUP4"
								},
								{
									"begin": 399,
									"end": 462,
									"name": "CODECOPY"
								},
								{
									"begin": 399,
									"end": 462,
									"name": "DUP2"
								},
								{
									"begin": 399,
									"end": 462,
									"name": "DUP2"
								},
								{
									"begin": 399,
									"end": 462,
									"name": "ADD"
								},
								{
									"begin": 399,
									"end": 462,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 399,
									"end": 462,
									"name": "MSTORE"
								},
								{
									"begin": 13,
									"end": 15,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 8,
									"end": 11,
									"name": "DUP2"
								},
								{
									"begin": 5,
									"end": 16,
									"name": "LT"
								},
								{
									"begin": 2,
									"end": 4,
									"name": "ISZERO"
								},
								{
									"begin": 2,
									"end": 4,
									"name": "PUSH [tag]",
									"value": "2"
								},
								{
									"begin": 2,
									"end": 4,
									"name": "JUMPI"
								},
								{
									"begin": 29,
									"end": 30,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 26,
									"end": 27,
									"name": "DUP1"
								},
								{
									"begin": 19,
									"end": 31,
									"name": "REVERT"
								},
								{
									"begin": 2,
									"end": 4,
									"name": "tag",
									"value": "2"
								},
								{
									"begin": 2,
									"end": 4,
									"name": "JUMPDEST"
								},
								{
									"begin": 399,
									"end": 462,
									"name": "DUP2"
								},
								{
									"begin": 399,
									"end": 462,
									"name": "ADD"
								},
								{
									"begin": 399,
									"end": 462,
									"name": "SWAP1"
								},
								{
									"begin": 399,
									"end": 462,
									"name": "DUP1"
								},
								{
									"begin": 399,
									"end": 462,
									"name": "DUP1"
								},
								{
									"begin": 399,
									"end": 462,
									"name": "MLOAD"
								},
								{
									"begin": 399,
									"end": 462,
									"name": "SWAP1"
								},
								{
									"begin": 399,
									"end": 462,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 399,
									"end": 462,
									"name": "ADD"
								},
								{
									"begin": 399,
									"end": 462,
									"name": "SWAP1"
								},
								{
									"begin": 399,
									"end": 462,
									"name": "SWAP3"
								},
								{
									"begin": 399,
									"end": 462,
									"name": "SWAP2"
								},
								{
									"begin": 399,
									"end": 462,
									"name": "SWAP1"
								},
								{
									"begin": 399,
									"end": 462,
									"name": "POP"
								},
								{
									"begin": 399,
									"end": 462,
									"name": "POP"
								},
								{
									"begin": 399,
									"end": 462,
									"name": "POP"
								},
								{
									"begin": 105,
									"end": 115,
									"name": "CALLER"
								},
								{
									"begin": 97,
									"end": 102,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 97,
									"end": 102,
									"name": "DUP1"
								},
								{
									"begin": 97,
									"end": 115,
									"name": "PUSH",
									"value": "100"
								},
								{
									"begin": 97,
									"end": 115,
									"name": "EXP"
								},
								{
									"begin": 97,
									"end": 115,
									"name": "DUP2"
								},
								{
									"begin": 97,
									"end": 115,
									"name": "SLOAD"
								},
								{
									"begin": 97,
									"end": 115,
									"name": "DUP2"
								},
								{
									"begin": 97,
									"end": 115,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 97,
									"end": 115,
									"name": "MUL"
								},
								{
									"begin": 97,
									"end": 115,
									"name": "NOT"
								},
								{
									"begin": 97,
									"end": 115,
									"name": "AND"
								},
								{
									"begin": 97,
									"end": 115,
									"name": "SWAP1"
								},
								{
									"begin": 97,
									"end": 115,
									"name": "DUP4"
								},
								{
									"begin": 97,
									"end": 115,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 97,
									"end": 115,
									"name": "AND"
								},
								{
									"begin": 97,
									"end": 115,
									"name": "MUL"
								},
								{
									"begin": 97,
									"end": 115,
									"name": "OR"
								},
								{
									"begin": 97,
									"end": 115,
									"name": "SWAP1"
								},
								{
									"begin": 97,
									"end": 115,
									"name": "SSTORE"
								},
								{
									"begin": 97,
									"end": 115,
									"name": "POP"
								},
								{
									"begin": 447,
									"end": 459,
									"name": "DUP1"
								},
								{
									"begin": 439,
									"end": 444,
									"name": "PUSH",
									"value": "2"
								},
								{
									"begin": 439,
									"end": 459,
									"name": "DUP2"
								},
								{
									"begin": 439,
									"end": 459,
									"name": "SWAP1"
								},
								{
									"begin": 439,
									"end": 459,
									"name": "SSTORE"
								},
								{
									"begin": 439,
									"end": 459,
									"name": "POP"
								},
								{
									"begin": 399,
									"end": 462,
									"name": "POP"
								},
								{
									"begin": 299,
									"end": 663,
									"name": "PUSH #[$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 299,
									"end": 663,
									"name": "DUP1"
								},
								{
									"begin": 299,
									"end": 663,
									"name": "PUSH [$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 299,
									"end": 663,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 299,
									"end": 663,
									"name": "CODECOPY"
								},
								{
									"begin": 299,
									"end": 663,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 299,
									"end": 663,
									"name": "RETURN"
								}
							],
							".data": {
								"0": {
									".auxdata": "a265627a7a72315820bbed770c6ce9f4632444439afcc2426095e8c3ee676c58f651d93fc36656efa564736f6c63430005110032",
									".code": [
										{
											"begin": 299,
											"end": 663,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 299,
											"end": 663,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 299,
											"end": 663,
											"name": "MSTORE"
										},
										{
											"begin": 299,
											"end": 663,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 299,
											"end": 663,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 299,
											"end": 663,
											"name": "LT"
										},
										{
											"begin": 299,
											"end": 663,
											"name": "PUSH [tag]",
											"value": "1"
										},
										{
											"begin": 299,
											"end": 663,
											"name": "JUMPI"
										},
										{
											"begin": 299,
											"end": 663,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 299,
											"end": 663,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 299,
											"end": 663,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": 299,
											"end": 663,
											"name": "SHR"
										},
										{
											"begin": 299,
											"end": 663,
											"name": "DUP1"
										},
										{
											"begin": 299,
											"end": 663,
											"name": "PUSH",
											"value": "1AA3A008"
										},
										{
											"begin": 299,
											"end": 663,
											"name": "EQ"
										},
										{
											"begin": 299,
											"end": 663,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 299,
											"end": 663,
											"name": "JUMPI"
										},
										{
											"begin": 299,
											"end": 663,
											"name": "DUP1"
										},
										{
											"begin": 299,
											"end": 663,
											"name": "PUSH",
											"value": "A2B40D19"
										},
										{
											"begin": 299,
											"end": 663,
											"name": "EQ"
										},
										{
											"begin": 299,
											"end": 663,
											"name": "PUSH [tag]",
											"value": "3"
										},
										{
											"begin": 299,
											"end": 663,
											"name": "JUMPI"
										},
										{
											"begin": 299,
											"end": 663,
											"name": "tag",
											"value": "1"
										},
										{
											"begin": 299,
											"end": 663,
											"name": "JUMPDEST"
										},
										{
											"begin": 299,
											"end": 663,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 299,
											"end": 663,
											"name": "DUP1"
										},
										{
											"begin": 299,
											"end": 663,
											"name": "REVERT"
										},
										{
											"begin": 472,
											"end": 574,
											"name": "tag",
											"value": "2"
										},
										{
											"begin": 472,
											"end": 574,
											"name": "JUMPDEST"
										},
										{
											"begin": 472,
											"end": 574,
											"name": "PUSH [tag]",
											"value": "4"
										},
										{
											"begin": 472,
											"end": 574,
											"name": "PUSH [tag]",
											"value": "5"
										},
										{
											"begin": 472,
											"end": 574,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 472,
											"end": 574,
											"name": "tag",
											"value": "4"
										},
										{
											"begin": 472,
											"end": 574,
											"name": "JUMPDEST"
										},
										{
											"begin": 472,
											"end": 574,
											"name": "STOP"
										},
										{
											"begin": 579,
											"end": 660,
											"name": "tag",
											"value": "3"
										},
										{
											"begin": 579,
											"end": 660,
											"name": "JUMPDEST"
										},
										{
											"begin": 579,
											"end": 660,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "6"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "6"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 579,
											"end": 660,
											"name": "POP"
										},
										{
											"begin": 579,
											"end": 660,
											"name": "PUSH [tag]",
											"value": "7"
										},
										{
											"begin": 579,
											"end": 660,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 579,
											"end": 660,
											"name": "DUP1"
										},
										{
											"begin": 579,
											"end": 660,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 579,
											"end": 660,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "8"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "8"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 579,
											"end": 660,
											"name": "DUP2"
										},
										{
											"begin": 579,
											"end": 660,
											"name": "ADD"
										},
										{
											"begin": 579,
											"end": 660,
											"name": "SWAP1"
										},
										{
											"begin": 579,
											"end": 660,
											"name": "DUP1"
										},
										{
											"begin": 579,
											"end": 660,
											"name": "DUP1"
										},
										{
											"begin": 579,
											"end": 660,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 579,
											"end": 660,
											"name": "SWAP1"
										},
										{
											"begin": 579,
											"end": 660,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 579,
											"end": 660,
											"name": "ADD"
										},
										{
											"begin": 579,
											"end": 660,
											"name": "SWAP1"
										},
										{
											"begin": 579,
											"end": 660,
											"name": "SWAP3"
										},
										{
											"begin": 579,
											"end": 660,
											"name": "SWAP2"
										},
										{
											"begin": 579,
											"end": 660,
											"name": "SWAP1"
										},
										{
											"begin": 579,
											"end": 660,
											"name": "POP"
										},
										{
											"begin": 579,
											"end": 660,
											"name": "POP"
										},
										{
											"begin": 579,
											"end": 660,
											"name": "POP"
										},
										{
											"begin": 579,
											"end": 660,
											"name": "PUSH [tag]",
											"value": "9"
										},
										{
											"begin": 579,
											"end": 660,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 579,
											"end": 660,
											"name": "tag",
											"value": "7"
										},
										{
											"begin": 579,
											"end": 660,
											"name": "JUMPDEST"
										},
										{
											"begin": 579,
											"end": 660,
											"name": "STOP"
										},
										{
											"begin": 472,
											"end": 574,
											"name": "tag",
											"value": "5"
										},
										{
											"begin": 472,
											"end": 574,
											"name": "JUMPDEST"
										},
										{
											"begin": 513,
											"end": 518,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 513,
											"end": 518,
											"name": "SLOAD"
										},
										{
											"begin": 258,
											"end": 263,
											"name": "DUP1"
										},
										{
											"begin": 245,
											"end": 254,
											"name": "CALLVALUE"
										},
										{
											"begin": 245,
											"end": 263,
											"name": "LT"
										},
										{
											"begin": 241,
											"end": 288,
											"name": "PUSH [tag]",
											"value": "11"
										},
										{
											"begin": 241,
											"end": 288,
											"name": "JUMPI"
										},
										{
											"begin": 563,
											"end": 567,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 529,
											"end": 548,
											"name": "DUP1"
										},
										{
											"begin": 529,
											"end": 560,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 549,
											"end": 559,
											"name": "CALLER"
										},
										{
											"begin": 529,
											"end": 560,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 529,
											"end": 560,
											"name": "AND"
										},
										{
											"begin": 529,
											"end": 560,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 529,
											"end": 560,
											"name": "AND"
										},
										{
											"begin": 529,
											"end": 560,
											"name": "DUP2"
										},
										{
											"begin": 529,
											"end": 560,
											"name": "MSTORE"
										},
										{
											"begin": 529,
											"end": 560,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 529,
											"end": 560,
											"name": "ADD"
										},
										{
											"begin": 529,
											"end": 560,
											"name": "SWAP1"
										},
										{
											"begin": 529,
											"end": 560,
											"name": "DUP2"
										},
										{
											"begin": 529,
											"end": 560,
											"name": "MSTORE"
										},
										{
											"begin": 529,
											"end": 560,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 529,
											"end": 560,
											"name": "ADD"
										},
										{
											"begin": 529,
											"end": 560,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 529,
											"end": 560,
											"name": "KECCAK256"
										},
										{
											"begin": 529,
											"end": 560,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 529,
											"end": 567,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 529,
											"end": 567,
											"name": "EXP"
										},
										{
											"begin": 529,
											"end": 567,
											"name": "DUP2"
										},
										{
											"begin": 529,
											"end": 567,
											"name": "SLOAD"
										},
										{
											"begin": 529,
											"end": 567,
											"name": "DUP2"
										},
										{
											"begin": 529,
											"end": 567,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 529,
											"end": 567,
											"name": "MUL"
										},
										{
											"begin": 529,
											"end": 567,
											"name": "NOT"
										},
										{
											"begin": 529,
											"end": 567,
											"name": "AND"
										},
										{
											"begin": 529,
											"end": 567,
											"name": "SWAP1"
										},
										{
											"begin": 529,
											"end": 567,
											"name": "DUP4"
										},
										{
											"begin": 529,
											"end": 567,
											"name": "ISZERO"
										},
										{
											"begin": 529,
											"end": 567,
											"name": "ISZERO"
										},
										{
											"begin": 529,
											"end": 567,
											"name": "MUL"
										},
										{
											"begin": 529,
											"end": 567,
											"name": "OR"
										},
										{
											"begin": 529,
											"end": 567,
											"name": "SWAP1"
										},
										{
											"begin": 529,
											"end": 567,
											"name": "SSTORE"
										},
										{
											"begin": 529,
											"end": 567,
											"name": "POP"
										},
										{
											"begin": 241,
											"end": 288,
											"name": "tag",
											"value": "11"
										},
										{
											"begin": 241,
											"end": 288,
											"name": "JUMPDEST"
										},
										{
											"begin": 472,
											"end": 574,
											"name": "POP"
										},
										{
											"begin": 472,
											"end": 574,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 579,
											"end": 660,
											"name": "tag",
											"value": "9"
										},
										{
											"begin": 579,
											"end": 660,
											"name": "JUMPDEST"
										},
										{
											"begin": 177,
											"end": 182,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 177,
											"end": 182,
											"name": "DUP1"
										},
										{
											"begin": 177,
											"end": 182,
											"name": "SWAP1"
										},
										{
											"begin": 177,
											"end": 182,
											"name": "SLOAD"
										},
										{
											"begin": 177,
											"end": 182,
											"name": "SWAP1"
										},
										{
											"begin": 177,
											"end": 182,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 177,
											"end": 182,
											"name": "EXP"
										},
										{
											"begin": 177,
											"end": 182,
											"name": "SWAP1"
										},
										{
											"begin": 177,
											"end": 182,
											"name": "DIV"
										},
										{
											"begin": 177,
											"end": 182,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 177,
											"end": 182,
											"name": "AND"
										},
										{
											"begin": 163,
											"end": 182,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 163,
											"end": 182,
											"name": "AND"
										},
										{
											"begin": 163,
											"end": 173,
											"name": "CALLER"
										},
										{
											"begin": 163,
											"end": 182,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 163,
											"end": 182,
											"name": "AND"
										},
										{
											"begin": 163,
											"end": 182,
											"name": "EQ"
										},
										{
											"begin": 155,
											"end": 183,
											"name": "PUSH [tag]",
											"value": "14"
										},
										{
											"begin": 155,
											"end": 183,
											"name": "JUMPI"
										},
										{
											"begin": 155,
											"end": 183,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 155,
											"end": 183,
											"name": "DUP1"
										},
										{
											"begin": 155,
											"end": 183,
											"name": "REVERT"
										},
										{
											"begin": 155,
											"end": 183,
											"name": "tag",
											"value": "14"
										},
										{
											"begin": 155,
											"end": 183,
											"name": "JUMPDEST"
										},
										{
											"begin": 647,
											"end": 653,
											"name": "DUP1"
										},
										{
											"begin": 639,
											"end": 644,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 639,
											"end": 653,
											"name": "DUP2"
										},
										{
											"begin": 639,
											"end": 653,
											"name": "SWAP1"
										},
										{
											"begin": 639,
											"end": 653,
											"name": "SSTORE"
										},
										{
											"begin": 639,
											"end": 653,
											"name": "POP"
										},
										{
											"begin": 579,
											"end": 660,
											"name": "POP"
										},
										{
											"begin": 579,
											"end": 660,
											"name": "JUMP",
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"changePrice(uint256)": "a2b40d19",
							"register()": "1aa3a008"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.5.17+commit.d19bba13\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"initialPrice\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_price\",\"type\":\"uint256\"}],\"name\":\"changePrice\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"register\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"contracts/23.sol\":\"Register\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/23.sol\":{\"keccak256\":\"0x73826307e6564698135b8d2076ef85891908ebdb3ef4a4a61e19071103ff38d7\",\"urls\":[\"bzz-raw://bbe6a0eafc33cc4c17eefffaa6eb417a3b28005bd3211f618c96c5a6115b21ed\",\"dweb:/ipfs/QmV11c7cgJWyhucpVuiQkz1f2dBP8Bhpegp9jsXFdGrxUq\"]}},\"version\":1}",
					"userdoc": {
						"methods": {}
					}
				}
			}
		},
		"sources": {
			"contracts/23.sol": {
				"ast": {
					"absolutePath": "contracts/23.sol",
					"exportedSymbols": {
						"Owner": [
							36
						],
						"Register": [
							81
						]
					},
					"id": 82,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.5",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "0:23:0"
						},
						{
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": null,
							"fullyImplemented": true,
							"id": 36,
							"linearizedBaseContracts": [
								36
							],
							"name": "Owner",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 3,
									"name": "owner",
									"nodeType": "VariableDeclaration",
									"scope": 36,
									"src": "48:13:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 2,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "48:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 11,
										"nodeType": "Block",
										"src": "88:34:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 9,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 6,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3,
														"src": "97:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 7,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 96,
															"src": "105:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 8,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "105:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"src": "97:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 10,
												"nodeType": "ExpressionStatement",
												"src": "97:18:0"
											}
										]
									},
									"documentation": null,
									"id": 12,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "78:2:0"
									},
									"returnParameters": {
										"id": 5,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "88:0:0"
									},
									"scope": 36,
									"src": "67:55:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 22,
										"nodeType": "Block",
										"src": "146:54:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 18,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 15,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 96,
																	"src": "163:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 16,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "163:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"id": 17,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3,
																"src": "177:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "163:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 14,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															99,
															100
														],
														"referencedDeclaration": 99,
														"src": "155:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 19,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "155:28:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 20,
												"nodeType": "ExpressionStatement",
												"src": "155:28:0"
											},
											{
												"id": 21,
												"nodeType": "PlaceholderStatement",
												"src": "192:1:0"
											}
										]
									},
									"documentation": null,
									"id": 23,
									"name": "onlyOwner",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 13,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "146:0:0"
									},
									"src": "127:73:0",
									"visibility": "internal"
								},
								{
									"body": {
										"id": 34,
										"nodeType": "Block",
										"src": "232:62:0",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 30,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 27,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 96,
															"src": "245:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 28,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "value",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "245:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">=",
													"rightExpression": {
														"argumentTypes": null,
														"id": 29,
														"name": "price",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 25,
														"src": "258:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "245:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 33,
												"nodeType": "IfStatement",
												"src": "241:47:0",
												"trueBody": {
													"id": 32,
													"nodeType": "Block",
													"src": "265:23:0",
													"statements": [
														{
															"id": 31,
															"nodeType": "PlaceholderStatement",
															"src": "277:1:0"
														}
													]
												}
											}
										]
									},
									"documentation": null,
									"id": 35,
									"name": "costs",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 26,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 25,
												"name": "price",
												"nodeType": "VariableDeclaration",
												"scope": 35,
												"src": "220:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 24,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "220:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "219:12:0"
									},
									"src": "205:89:0",
									"visibility": "internal"
								}
							],
							"scope": 82,
							"src": "27:270:0"
						},
						{
							"baseContracts": [
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 37,
										"name": "Owner",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 36,
										"src": "320:5:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_Owner_$36",
											"typeString": "contract Owner"
										}
									},
									"id": 38,
									"nodeType": "InheritanceSpecifier",
									"src": "320:5:0"
								}
							],
							"contractDependencies": [
								36
							],
							"contractKind": "contract",
							"documentation": null,
							"fullyImplemented": true,
							"id": 81,
							"linearizedBaseContracts": [
								81,
								36
							],
							"name": "Register",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 42,
									"name": "registeredAddresses",
									"nodeType": "VariableDeclaration",
									"scope": 81,
									"src": "332:45:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
										"typeString": "mapping(address => bool)"
									},
									"typeName": {
										"id": 41,
										"keyType": {
											"id": 39,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "341:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "332:25:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
											"typeString": "mapping(address => bool)"
										},
										"valueType": {
											"id": 40,
											"name": "bool",
											"nodeType": "ElementaryTypeName",
											"src": "352:4:0",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											}
										}
									},
									"value": null,
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 44,
									"name": "price",
									"nodeType": "VariableDeclaration",
									"scope": 81,
									"src": "383:10:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 43,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "383:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 53,
										"nodeType": "Block",
										"src": "437:25:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 51,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 49,
														"name": "price",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 44,
														"src": "439:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 50,
														"name": "initialPrice",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 46,
														"src": "447:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "439:20:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 52,
												"nodeType": "ExpressionStatement",
												"src": "439:20:0"
											}
										]
									},
									"documentation": null,
									"id": 54,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 47,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 46,
												"name": "initialPrice",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "411:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 45,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "411:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "410:19:0"
									},
									"returnParameters": {
										"id": 48,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "437:0:0"
									},
									"scope": 81,
									"src": "399:63:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 67,
										"nodeType": "Block",
										"src": "520:54:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 65,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 60,
															"name": "registeredAddresses",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 42,
															"src": "529:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 63,
														"indexExpression": {
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 61,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 96,
																"src": "549:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 62,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "549:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "529:31:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"hexValue": "74727565",
														"id": 64,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "563:4:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "529:38:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 66,
												"nodeType": "ExpressionStatement",
												"src": "529:38:0"
											}
										]
									},
									"documentation": null,
									"id": 68,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"argumentTypes": null,
													"id": 57,
													"name": "price",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 44,
													"src": "513:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												}
											],
											"id": 58,
											"modifierName": {
												"argumentTypes": null,
												"id": 56,
												"name": "costs",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 35,
												"src": "507:5:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$_t_uint256_$",
													"typeString": "modifier (uint256)"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "507:12:0"
										}
									],
									"name": "register",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 55,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "489:2:0"
									},
									"returnParameters": {
										"id": 59,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "520:0:0"
									},
									"scope": 81,
									"src": "472:102:0",
									"stateMutability": "payable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 79,
										"nodeType": "Block",
										"src": "630:30:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 77,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 75,
														"name": "price",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 44,
														"src": "639:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 76,
														"name": "_price",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 70,
														"src": "647:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "639:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 78,
												"nodeType": "ExpressionStatement",
												"src": "639:14:0"
											}
										]
									},
									"documentation": null,
									"id": 80,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 73,
											"modifierName": {
												"argumentTypes": null,
												"id": 72,
												"name": "onlyOwner",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 23,
												"src": "620:9:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "620:9:0"
										}
									],
									"name": "changePrice",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 71,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 70,
												"name": "_price",
												"nodeType": "VariableDeclaration",
												"scope": 80,
												"src": "600:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 69,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "600:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "599:13:0"
									},
									"returnParameters": {
										"id": 74,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "630:0:0"
									},
									"scope": 81,
									"src": "579:81:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								}
							],
							"scope": 82,
							"src": "299:364:0"
						}
					],
					"src": "0:678:0"
				},
				"id": 0
			}
		}
	}
}